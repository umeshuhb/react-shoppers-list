{"version":3,"sources":["components/Product/ProductListItems.js","components/AppContext.js","components/Home.js","components/Product/ProductDetail.js","App.js","reportWebVitals.js","index.js"],"names":["ProductListItems","itemDetail","className","to","categoryId","id","name","src","process","imageUrl","width","height","AppContext","createContext","AppProvider","props","useState","category","setCategory","Provider","value","children","Home","categories","setCategories","useContext","product","products","setProducts","useEffect","fetchCategories","fetchProducts","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","useStyles","shoppingURL","a","fetch","data","json","console","log","FormControl","Select","labelId","onChange","event","filter","target","map","item","idx","MenuItem","ProductDetail","state","productDetails","this","fetchProductDetail","match","params","obj","catId","setState","history","goBack","length","Button","variant","color","onClick","bind","style","dangerouslySetInnerHTML","__html","description","Component","path","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b39fb34.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/style.css';\r\n\r\n\r\nfunction ProductListItems({itemDetail}) {\r\n    const path = '/react-shoppers-list';\r\n\r\n    return (\r\n       \r\n        <div className=\"product\">\r\n            <Link to={`${path}/${itemDetail.categoryId}/${itemDetail.id}`}>\r\n                {itemDetail.name} \r\n                <img src={`${process.env.PUBLIC_URL}/${itemDetail.imageUrl}`} width='100px' height='100px' />                \r\n            </Link>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProductListItems\r\n","import React, {useState, createContext } from 'react';\r\n\r\n\r\nexport const AppContext  = createContext();\r\n\r\n\r\nexport const AppProvider = props =>{\r\n\r\n    const [category, setCategory] = useState({id: 1, name:'Laptops'});\r\n    \r\n    return (\r\n      <AppContext.Provider value={[category, setCategory]} >\r\n          {props.children}\r\n      </AppContext.Provider>\r\n    )\r\n  }","import React, {useEffect, useContext, useState } from 'react';\r\nimport ProductListItems from './Product/ProductListItems';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { AppContext } from './AppContext';\r\n\r\nconst Home = (props)=>{   \r\n\r\n    const [categories, setCategories] = useState([{\r\n        category : {}\r\n    }]);\r\n\r\n    const [category,setCategory] = useContext(AppContext);\r\n\r\n    const [products, setProducts] = useState([{\r\n      product : {}\r\n    }]);\r\n    \r\n\r\n    useEffect( ()=> {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    useEffect( ()=> {\r\n      fetchProducts();\r\n    }, [category]);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120    \r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      }));\r\n    \r\n      const classes = useStyles();   \r\n    \r\n      const handleChange = (event) => {    \r\n        const name = categories.filter( (category) => {\r\n            return category.id === event.target.value;\r\n          })[0].name; \r\n          \r\n        setCategory( { id: event.target.value, name: name } );             \r\n        \r\n       };\r\n\r\n    //const shoppingURL = 'http://localhost:3001';\r\n    const shoppingURL = 'https://my-json-server.typicode.com/umeshuhb/shoppers-list-db';\r\n   \r\n\r\n    const fetchProducts = async()=> {\r\n      try {\r\n         const data = await fetch(`${shoppingURL}/products?categoryId=${category.id}`);\r\n         const products = await data.json();\r\n         setProducts(products);\r\n      }\r\n      catch(error) {\r\n          console.log(error);\r\n      }\r\n  };\r\n\r\n    const fetchCategories = async()=> {\r\n        try {\r\n           // const data = await fetch(`${shoppingURL}?q=${match.params.id}`);\r\n           const data = await fetch(`${shoppingURL}/categories`);\r\n           const categories = await data.json();\r\n           setCategories(categories);\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>            \r\n\r\n        <div className=\"header\"><span>Category :</span> \r\n        <FormControl className={classes.formControl}>            \r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category.id}        \r\n            onChange={handleChange}\r\n            >\r\n                {categories.map( (item, idx) =>(\r\n                      <MenuItem key={idx} value={item.id}>{item.name}</MenuItem>\r\n                  ))}\r\n            \r\n            </Select>\r\n        </FormControl> \r\n        </div>\r\n\r\n        <div className=\"data-container flex-container\">\r\n          {products.map( (product, idx) =>(\r\n\r\n                 <ProductListItems key={idx} itemDetail={product} /> \r\n\r\n          ))}\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    )\r\n   \r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\n//const shoppingURL = 'http://localhost:3001';\r\nconst shoppingURL = 'https://my-json-server.typicode.com/umeshuhb/shoppers-list-db';\r\n      \r\nclass ProductDetail extends Component {\r\n    \r\n    state = {\r\n        productDetails: null\r\n     };\r\n\r\n    componentDidMount(){\r\n        this.fetchProductDetail(this.props.match.params);\r\n    }\r\n    \r\n    async fetchProductDetail (obj){\r\n            try {\r\n               const data = await fetch(`${shoppingURL}/productDetails?categoryId=${obj.catId}&id=${obj.id}`);\r\n               const productDetails = await data.json();\r\n               this.setState({ productDetails });\r\n            }\r\n            catch(error) {\r\n                console.log(error);\r\n            }\r\n    }\r\n    \r\n    goBack(){\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n       const { productDetails } = this.state;   \r\n\r\n         if (productDetails === null) {\r\n           return <h2>Loading Product Details...</h2>;\r\n         }\r\n\r\n         if( !productDetails || productDetails.length < 1){\r\n             return (\r\n                 <h1> No data to display</h1>\r\n             )\r\n         }\r\n        return (\r\n            \r\n            <div className=\"product_details\">\r\n                <div className=\"header\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.goBack.bind(this)}>\r\n                        <ChevronLeftIcon/> <span className=\"textButton\">Back</span>\r\n                    </Button>\r\n                    <h2>{ productDetails[0].name }</h2>          \r\n                </div>                                 \r\n                <div style={{ width: '500px', margin:'20px auto', color: '#333' }}>\r\n                    <img src={`${process.env.PUBLIC_URL}/${productDetails[0].imageUrl}`} width=\"280px\" height=\"280px\" />    \r\n                    <pre dangerouslySetInnerHTML={ {__html: productDetails[0].description} } ></pre>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductDetail;","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport ProductDetail from './components/Product/ProductDetail';\nimport {AppProvider} from './components/AppContext';\n\nimport './App.css';\n\nconst path = '/react-shoppers-list';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AppProvider>\n      <Router>\n          <Route exact path={`${path}/`} component={Home} />\n          { <Route path={`${path}/:catId/:id`} component={ProductDetail}  /> }\n      </Router>\n      </AppProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}