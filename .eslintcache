[{"D:\\UmeshAppTest\\react-shoppers-list\\src\\index.js":"1","D:\\UmeshAppTest\\react-shoppers-list\\src\\reportWebVitals.js":"2","D:\\UmeshAppTest\\react-shoppers-list\\src\\App.js":"3","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Product\\ProductListItems.js":"4","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Home.js":"5","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Product\\ProductDetail.js":"6","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\AppContext.js":"7"},{"size":500,"mtime":1607669810436,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":614,"mtime":1607797008388,"results":"11","hashOfConfig":"9"},{"size":578,"mtime":1607878861430,"results":"12","hashOfConfig":"9"},{"size":3079,"mtime":1607882560570,"results":"13","hashOfConfig":"9"},{"size":2172,"mtime":1607886468297,"results":"14","hashOfConfig":"9"},{"size":371,"mtime":1607796862969,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1j5j8zp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\UmeshAppTest\\react-shoppers-list\\src\\index.js",[],["33","34"],"D:\\UmeshAppTest\\react-shoppers-list\\src\\reportWebVitals.js",[],"D:\\UmeshAppTest\\react-shoppers-list\\src\\App.js",[],"D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Product\\ProductListItems.js",["35"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/style.css';\r\n\r\n\r\nfunction ProductListItems({itemDetail}) {\r\n    const path = '/react-shoppers-list';\r\n\r\n    return (\r\n       \r\n        <div className=\"product\">\r\n            <Link to={`${path}/${itemDetail.categoryId}/${itemDetail.id}`}>\r\n                {itemDetail.name} \r\n                <img src={`${process.env.PUBLIC_URL}/${itemDetail.imageUrl}`} width='100px' height='100px' />                \r\n            </Link>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProductListItems\r\n","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Home.js",["36"],"import React, {useEffect, useContext, useState } from 'react';\r\nimport ProductListItems from './Product/ProductListItems';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { AppContext } from './AppContext';\r\n\r\nconst Home = (props)=>{   \r\n\r\n    const [categories, setCategories] = useState([{\r\n        category : {}\r\n    }]);\r\n\r\n    const [category,setCategory] = useContext(AppContext);\r\n\r\n    const [products, setProducts] = useState([{\r\n      product : {}\r\n    }]);\r\n    \r\n\r\n    useEffect( ()=> {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    useEffect( ()=> {\r\n      fetchProducts();\r\n    }, [category]);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120    \r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      }));\r\n    \r\n      const classes = useStyles();   \r\n    \r\n      const handleChange = (event) => {    \r\n        const name = categories.filter( (category) => {\r\n            return category.id === event.target.value;\r\n          })[0].name; \r\n          \r\n        setCategory( { id: event.target.value, name: name } );             \r\n        \r\n       };\r\n\r\n    //const shoppingURL = 'http://localhost:3001';\r\n    const shoppingURL = 'https://my-json-server.typicode.com/umeshuhb/shoppers-list-db';\r\n   \r\n\r\n    const fetchProducts = async()=> {\r\n      try {\r\n         const data = await fetch(`${shoppingURL}/products?categoryId=${category.id}`);\r\n         const products = await data.json();\r\n         setProducts(products);\r\n      }\r\n      catch(error) {\r\n          console.log(error);\r\n      }\r\n  };\r\n\r\n    const fetchCategories = async()=> {\r\n        try {\r\n           // const data = await fetch(`${shoppingURL}?q=${match.params.id}`);\r\n           const data = await fetch(`${shoppingURL}/categories`);\r\n           const categories = await data.json();\r\n           setCategories(categories);\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n      <div>            \r\n\r\n        <div className=\"header\"><span>Category :</span> \r\n        <FormControl className={classes.formControl}>            \r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={category.id}        \r\n            onChange={handleChange}\r\n            >\r\n                {categories.map( (item, idx) =>(\r\n                      <MenuItem key={idx} value={item.id}>{item.name}</MenuItem>\r\n                  ))}\r\n            \r\n            </Select>\r\n        </FormControl> \r\n        </div>\r\n\r\n        <div className=\"data-container flex-container\">\r\n          {products.map( (product, idx) =>(\r\n\r\n                 <ProductListItems key={idx} itemDetail={product} /> \r\n\r\n          ))}\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    )\r\n   \r\n}\r\n\r\nexport default Home\r\n","D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\Product\\ProductDetail.js",["37"],"D:\\UmeshAppTest\\react-shoppers-list\\src\\components\\AppContext.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":14,"column":17,"nodeType":"44","endLine":14,"endColumn":110},{"ruleId":"45","severity":1,"message":"46","line":28,"column":8,"nodeType":"47","endLine":28,"endColumn":18,"suggestions":"48"},{"ruleId":"42","severity":1,"message":"43","line":56,"column":21,"nodeType":"44","endLine":56,"endColumn":121},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [category, fetchProducts]",{"range":"54","text":"55"},[771,781],"[category, fetchProducts]"]